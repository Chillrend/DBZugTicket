/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package reservieren;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import javax.swing.Action;
import javax.swing.JOptionPane;


/**
 *
 * @author X453SA
 */
public class passgrdetails extends javax.swing.JFrame {
    Connection con;
    Statement stmt = null,stmt1 = null,stmt2,stmtAI;
    ResultSet rs = null,rs1 = null,rs2,custAIKeys,invoAIKeys;
    pasvar global = new pasvar();
    PreparedStatement psUserCreate,psInvoiceCreate,psChangeOccupied;
    Date date = new Date();
    String seat;
    Integer adultIncrement,adult=global.adults;
    /**
     * Creates new form passgrdetails
     */
    public passgrdetails() {
        adultIncrement = 1;
        initComponents();
        connectDB();
        userID.setEditable(false);
        useIDCheck();
        useID.setToolTipText("Type your Passenger ID to fill the details faster");
        details.setText("Please Fill Out Passenger No. " + String.valueOf(adultIncrement) + " Details");
        details4.setText(String.valueOf(global.adults));
        details2.setText(String.valueOf(adultIncrement));
        initArray();
    }
    public void frameVisual(){
        
    }
    public void useIDSelectedVisual(){
        userID.setEditable(true);
        nameseparat.setForeground(new Color(255,0,51));
        ageseparat.setForeground(new Color(255,0,51));
        identificationseparat.setForeground(new Color(255,0,51));
        idseparat.setForeground(new Color(102,153,255));
        name.setEditable(false);
        Age.setEditable(false);
        noktp.setEditable(false);
    }
    public void useIDNotSelectedVisual(){
        nameseparat.setForeground(new Color(102,153,255));
        ageseparat.setForeground(new Color(102,153,255));
        identificationseparat.setForeground(new Color(102,153,255));
        idseparat.setForeground(new Color(255,0,51));
        userID.setEditable(false);
        name.setEditable(true);
        Age.setEditable(true);
        noktp.setEditable(true);
    }
    public void useIDCheck(){
        useID.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            if(useID.isSelected()){
                useIDSelectedVisual();                
            }else{
                useIDNotSelectedVisual();
            }

        }
    });
        
    }
    public void connectDB(){
        try {
            Class.forName("com.mysql.jdbc.Driver");  
            con = DriverManager.getConnection(  
            "jdbc:mysql://localhost:3306/trendb","akar","akarpohon");  
            stmt = con.createStatement();
            stmt1 = con.createStatement();
            stmt2 = con.createStatement();
        }catch(Exception e){
            System.out.println(e);
        }    
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gender = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        details = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        Age = new javax.swing.JTextField();
        noktp = new javax.swing.JTextField();
        male = new javax.swing.JRadioButton();
        female = new javax.swing.JRadioButton();
        confirm = new javax.swing.JButton();
        details1 = new javax.swing.JLabel();
        details2 = new javax.swing.JLabel();
        details3 = new javax.swing.JLabel();
        details4 = new javax.swing.JLabel();
        useID = new javax.swing.JRadioButton();
        userID = new javax.swing.JTextField();
        idseparat = new javax.swing.JSeparator();
        nameseparat = new javax.swing.JSeparator();
        ageseparat = new javax.swing.JSeparator();
        identificationseparat = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel1.setText("Passenger Details");

        details.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        details.setText("Please Fill Out Passenger No. 0 Details");

        jLabel2.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel2.setText("Name");

        jLabel3.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel3.setText("Gender");

        jLabel4.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel4.setText("Age");

        jLabel5.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel5.setText("Identifcation");

        name.setBackground(new java.awt.Color(240, 240, 240));
        name.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        name.setBorder(null);

        Age.setBackground(new java.awt.Color(240, 240, 240));
        Age.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        Age.setBorder(null);

        noktp.setBackground(new java.awt.Color(240, 240, 240));
        noktp.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        noktp.setBorder(null);

        gender.add(male);
        male.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        male.setText("Male");

        gender.add(female);
        female.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        female.setText("Female");

        confirm.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        confirm.setText("Confirm");
        confirm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                confirmMouseClicked(evt);
            }
        });

        details1.setFont(new java.awt.Font("Roboto", 2, 14)); // NOI18N
        details1.setText("You are filling details of Passenger");

        details2.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        details2.setText("0");

        details3.setFont(new java.awt.Font("Roboto", 2, 14)); // NOI18N
        details3.setText("Out of");

        details4.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        details4.setText("0");

        useID.setFont(new java.awt.Font("Roboto", 0, 11)); // NOI18N
        useID.setText("Use ID");

        userID.setBackground(new java.awt.Color(240, 240, 240));
        userID.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        userID.setBorder(null);

        idseparat.setForeground(new java.awt.Color(255, 0, 51));

        nameseparat.setForeground(new java.awt.Color(102, 153, 255));

        ageseparat.setForeground(new java.awt.Color(102, 153, 255));

        identificationseparat.setForeground(new java.awt.Color(102, 153, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(noktp)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(ageseparat, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(Age, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(identificationseparat, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(male)
                        .addGap(18, 18, 18)
                        .addComponent(female))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nameseparat, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(44, 44, 44)
                        .addComponent(useID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userID, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idseparat, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(details1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(details2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(details3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(details4))
                    .addComponent(confirm)
                    .addComponent(details)
                    .addComponent(jLabel1))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(details)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameseparat, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(useID)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(userID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idseparat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(male)
                    .addComponent(female))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ageseparat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noktp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(identificationseparat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(details1)
                    .addComponent(details2)
                    .addComponent(details3)
                    .addComponent(details4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(confirm)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void createInvoice(){
        if (useID.isSelected()){
            try{
                rs = null;
                rs = stmt.executeQuery("SELECT seat_id,seatseries,seatnum FROM seat WHERE tr_id = " + global.tr_id + " AND occupied = 0;");
                    rs.next();
                    seat = rs.getString(2) + rs.getString(3);
//                    Arrays.fill(global.showSeat,seat);
                    global.showSeat[adultIncrement-1] = seat;
                    psInvoiceCreate = con.prepareStatement("INSERT INTO invoice (ticket_id,cust_id,date_issue,seat_id) VALUES (?,?,?,?)",Statement.RETURN_GENERATED_KEYS);
                    psInvoiceCreate.setString(1, String.valueOf(global.tkt_id));
                    psInvoiceCreate.setString(2, global.custID);

                    DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
                    String alrConvDate = dateFormat.format(date);

                    psInvoiceCreate.setString(3, alrConvDate);
                    psInvoiceCreate.setString(4, rs.getString(1));
                    psInvoiceCreate.executeUpdate();
                    psChangeOccupied = con.prepareStatement("UPDATE seat SET occupied=1 WHERE seat_id="+ rs.getString(1));
                    psChangeOccupied.executeUpdate();
                    ResultSet genKeyInv = psInvoiceCreate.getGeneratedKeys();
                    if(genKeyInv.next()){
                        global.invGenKey = genKeyInv.getInt(1);
                    }
//                    Arrays.fill(global.showInvCode, String.valueOf(global.invGenKey));
                    global.showInvCode[adultIncrement-1] = String.valueOf(global.invGenKey);
                    
            }catch (SQLException excc){
                JOptionPane.showMessageDialog(null, excc);
        }
        }else{
            try{
                rs = null;
                rs = stmt.executeQuery("SELECT seat_id,seatseries,seatnum FROM seat WHERE tr_id = " + global.tr_id + " AND occupied=0");
                rs.next();
                    seat = rs.getString(2) + rs.getString(3);
//                    Arrays.fill(global.showSeat,seat);
                    global.showSeat[adultIncrement-1] = seat;
                    psInvoiceCreate = con.prepareStatement("INSERT INTO invoice (ticket_id,cust_id,date_issue,seat_id) VALUES (?,?,?,?)",Statement.RETURN_GENERATED_KEYS);
                    psInvoiceCreate.setString(1, String.valueOf(global.tkt_id));
                    psInvoiceCreate.setString(2, String.valueOf(global.generatedKey));
                   
                    DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
                    String alrConvDate = dateFormat.format(date);

                    psInvoiceCreate.setString(3, alrConvDate);
                    psInvoiceCreate.setString(4, rs.getString(1));
                    psInvoiceCreate.executeUpdate();
                    psChangeOccupied = con.prepareStatement("UPDATE seat SET occupied=1 WHERE seat_id="+ rs.getString(1));
                    psChangeOccupied.executeUpdate();
                    ResultSet genKeyInv = psInvoiceCreate.getGeneratedKeys();
                    if(genKeyInv.next()){
                       global.invGenKey = genKeyInv.getInt(1);
                    }
//                    Arrays.fill(global.showInvCode, String.valueOf(global.invGenKey));
                    global.showInvCode[adultIncrement-1] = String.valueOf(global.invGenKey);
            }catch (SQLException excc){
                JOptionPane.showMessageDialog(null, excc);
        }
        }
    }
    public void fillDetails(){
        if (useID.isSelected()){
                try{
                    rs = stmt.executeQuery("SELECT * FROM customer where cust_id=" + userID.getText());
                    if(rs.next() == false){
                        JOptionPane.showMessageDialog(null, "No Customer Data Found!");
                    }else{
                        global.custID =rs.getString(1);
                        global.custName = rs.getString(2);
                        global.custGender = rs.getString(3);
                        global.custAge = rs.getString(4);
                        global.custIdentify = rs.getString(5);
//                        Arrays.fill(global.showNoKtp, rs.getString(5));
//                        Arrays.fill(global.showName, rs.getString(2));
                        global.showNoKtp [adultIncrement-1] = rs.getString(5);
                        global.showName[adultIncrement-1] = rs.getString(2);
                        createInvoice();
                        global.adultAsCount = global.adultAsCount-1;
                        adultIncrement++;
                        details.setText("Please Fill Out Passenger No. " + String.valueOf(adultIncrement) + " Details");
                        details2.setText(String.valueOf(adultIncrement));
                        this.dispose();
                        this.setVisible(true);
                    }
                }catch (SQLException except){
                    System.out.println(except);
                }
            }else{ 
                global.custName = name.getText();
//                Arrays.fill(global.showName, name.getText());
               global. showName[adultIncrement-1] = name.getText();
                if (male.isSelected()){
                    global.custGender = "M";
                }else if(female.isSelected()){
                    global.custGender = "F";
                }else{
                    JOptionPane.showMessageDialog(null, "Please Select Gender");
                }
                global.custAge = Age.getText();
                global.custIdentify = noktp.getText();
//                Arrays.fill(global.showNoKtp, noktp.getText());
                global.showNoKtp[adultIncrement-1] = noktp.getText();
                try{
                    Integer userAge = Integer.valueOf(global.custAge);
                    psUserCreate = con.prepareStatement("INSERT INTO customer (name,gender,age,identification)"
                            + " VALUES (?,?,?,?)",Statement.RETURN_GENERATED_KEYS);
                    psUserCreate.setString(1, global.custName);
                    psUserCreate.setString(2, global.custGender);
                    psUserCreate.setInt(3, userAge);
                    psUserCreate.setString(4, global.custIdentify);
                    psUserCreate.executeUpdate();
                   
                    ResultSet genKeys = psUserCreate.getGeneratedKeys();
                    if(genKeys.next()){
                        global.generatedKey = genKeys.getInt(1);
                    }
                    createInvoice();
                    global.adultAsCount = global.adultAsCount-1;
                    adultIncrement++;
                    details.setText("Please Fill Out Passenger No. " + String.valueOf(adultIncrement) + " Details");
                    details2.setText(String.valueOf(adultIncrement));
                }catch(SQLException exc){
                    System.out.println(exc);
                }
            
            }
    }
    public void initArray(){
        global.showName = new String[adult];
        global.showNoKtp = new String[adult];
        global.showSeat = new String [adult];
        global.showInvCode = new String [adult];
    }
    private void confirmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmMouseClicked
        if(global.adultAsCount > 1){
            
            fillDetails();
            this.dispose();
            this.setVisible(true);
        }else if(global.adultAsCount == 1){
            
            fillDetails();
            this.dispose();
            new showBookInfo().setVisible(true);
        }
    }//GEN-LAST:event_confirmMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(passgrdetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(passgrdetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(passgrdetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(passgrdetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new passgrdetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Age;
    private javax.swing.JSeparator ageseparat;
    private javax.swing.JButton confirm;
    private javax.swing.JLabel details;
    private javax.swing.JLabel details1;
    private javax.swing.JLabel details2;
    private javax.swing.JLabel details3;
    private javax.swing.JLabel details4;
    private javax.swing.JRadioButton female;
    private javax.swing.ButtonGroup gender;
    private javax.swing.JSeparator identificationseparat;
    private javax.swing.JSeparator idseparat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JRadioButton male;
    private javax.swing.JTextField name;
    private javax.swing.JSeparator nameseparat;
    private javax.swing.JTextField noktp;
    private javax.swing.JRadioButton useID;
    private javax.swing.JTextField userID;
    // End of variables declaration//GEN-END:variables
}
