/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package reservieren;

import java.sql.*;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author X453SA
 */
public class zugschedule extends javax.swing.JFrame {
    
    pasvar global = new pasvar();
    int hbfone = global.hbf1;
    int hbftwo = global.hbf2, routeid = global.routeid;
    Statement stmt = null;
    Statement stmt1 = null;
    Statement stmt2 = null;
    ResultSet rs = null;
    ResultSet rs1 = null;
    ResultSet rs2 = null;
    Connection con = null;
    PreparedStatement prep = null;
    /**
     * Creates new form zugschedule
     */
    public zugschedule() {
        initComponents();
        connectDB();
        try{
        rs = stmt.executeQuery("SELECT name FROM station WHERE st_id=" + String.valueOf(hbfone));
        rs1 = stmt1.executeQuery("SELECT name FROM station WHERE st_id=" + String.valueOf(hbftwo));
        while(rs.next() && rs1.next()){
        Hbf1.setText(rs.getString(1));
        Hbf2.setText(rs1.getString(1));
        }
        }catch (SQLException except){
            System.out.println(except);
        }
        
        fillzetable();
//        FillTable(zugTabel, "SELECT * FROM z"
//                + "WHERE Stat_Depart=" + hbfone + "AND Stat_Arrive" + hbftwo
//                + "AND Available=1;");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Hbf1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Hbf2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        zugTabel = new javax.swing.JTable();
        cont = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel1.setText("Available Train");

        Hbf1.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        Hbf1.setText("0");

        jLabel3.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel3.setText("to");

        Hbf2.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        Hbf2.setText("0");

        zugTabel.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        zugTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Trip ID", "Train Number", "Train Name", "From", "To", "Date", "Departure Time", "Price"
            }
        ));
        jScrollPane1.setViewportView(zugTabel);

        cont.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        cont.setText("Book Ticket");
        cont.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                contMouseClicked(evt);
            }
        });
        cont.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgsrc/30 dblogo.png"))); // NOI18N

        cancel.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        cancel.setText("Cancel");
        cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cont))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Hbf1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Hbf2)))))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Hbf1)
                                .addComponent(jLabel3)
                                .addComponent(Hbf2))
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cont)
                            .addComponent(cancel))
                        .addGap(47, 47, 47))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void connectDB(){
        try {
            Class.forName("com.mysql.jdbc.Driver");  
            con = DriverManager.getConnection(  
            "jdbc:mysql://localhost:3306/trendb","akar","akarpohon");  
            stmt = con.createStatement();
            stmt1 = con.createStatement();
            stmt2 = con.createStatement();
            
        }catch(Exception e){
            System.out.println(e);
        }    
        
    }
    public void fillzetable(){
        DefaultTableModel model = (DefaultTableModel) zugTabel.getModel();
        try{
        rs = stmt.executeQuery("SELECT tkt_id,tr_id,date_depart,time_depart,price FROM ticket WHERE route_id=" + String.valueOf(routeid) +
                " AND seat_avail>" + global.adults + " AND date_depart='" + global.date +"';");
        global.from = Hbf1.getText();
        global.to=Hbf2.getText();
        while(rs.next()){
            String date_depart = rs.getString(3);
            String price = rs.getString(5);
            String depart_time = rs.getString(4);
            String tr_id = rs.getString(2);
            
            String tkt_id = rs.getString(1);
            rs1 = stmt1.executeQuery("SELECT name FROM series WHERE series_id="     + tr_id);
            while(rs1.next()){
               String tr_name = rs1.getString(1);
               model.addRow(new Object[]{tkt_id,tr_id,tr_name,global.from,global.to, date_depart,depart_time,"â‚¬" + price});
            }
        }
        }catch (SQLException except){
            System.out.println(except);
        }    
    }
    public void FillTable(JTable table, String Query)
    {
    try
    {
        //To remove previously added rows
        while(zugTabel.getRowCount() > 0) 
        {
            ((DefaultTableModel) zugTabel.getModel()).removeRow(0);
        }
        /*rs=stmt.executeQuery("SELECT * FROM zugsched /n"
                + " WHERE Stat_Depart=" + hbfone + " AND Stat_Arrive" + hbftwo
                + " AND Available=1;");*/
        String getTabel = "SELECT * FROM zugsched WHERE Stat_Depart='" + hbfone + "' AND Stat_Arrive='" +
                hbftwo + "' AND Available=1;";

        prep = con.prepareStatement(getTabel);
        
        rs = prep.executeQuery(getTabel);
        int columns = rs.getMetaData().getColumnCount();
        while(rs.next())
        {  
            Object[] row = new Object[columns];
            for (int i = 1; i <= columns; i++)
            {  
                row[i - 1] = rs.getObject(i);
            }
            ((DefaultTableModel) zugTabel.getModel()).insertRow(rs.getRow()-1,row);
        }

        rs.close();
        stmt.close();
        
    }catch(Exception e)
    {
        System.out.println(e);
    }
}
    private void contMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contMouseClicked
        String getcol = zugTabel.getModel().getValueAt(zugTabel.getSelectedRow(), 0).toString();
        global.tr_id = zugTabel.getModel().getValueAt(zugTabel.getSelectedRow(), 1).toString();
        global.departTime = zugTabel.getModel().getValueAt(zugTabel.getSelectedRow(), 6).toString();
        global.tkt_id = Integer.valueOf(getcol);
        new confirmation().setVisible(true);
        System.out.println(getcol);// TODO add your handling code here:
    }//GEN-LAST:event_contMouseClicked

    private void cancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelMouseClicked

    private void contActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(zugschedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(zugschedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(zugschedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(zugschedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new zugschedule().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Hbf1;
    private javax.swing.JLabel Hbf2;
    private javax.swing.JButton cancel;
    private javax.swing.JButton cont;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable zugTabel;
    // End of variables declaration//GEN-END:variables
}
